version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: oud-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: secure_password_123
      MONGO_INITDB_DATABASE: oud-restaurant
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    networks:
      - oud-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: oud-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 4000
      MONGODB_URI: mongodb://admin:secure_password_123@mongodb:27017/oud-restaurant?authSource=admin
      JWT_SECRET: your_super_secure_jwt_secret_here
      CORS_ORIGIN: https://oud-restaurant.com
    ports:
      - "4000:4000"
    volumes:
      - ./backend/uploads:/app/uploads
    depends_on:
      - mongodb
    networks:
      - oud-network

  # Frontend (Customer Website)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: oud-frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: https://api.oud-restaurant.com
      NODE_ENV: production
    ports:
      - "5173:80"
    depends_on:
      - backend
    networks:
      - oud-network

  # Admin Panel
  admin:
    build:
      context: ./admin
      dockerfile: Dockerfile
    container_name: oud-admin
    restart: unless-stopped
    environment:
      VITE_API_URL: https://api.oud-restaurant.com
      NODE_ENV: production
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - oud-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: oud-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - admin
      - backend
    networks:
      - oud-network

volumes:
  mongodb_data:

networks:
  oud-network:
    driver: bridge
